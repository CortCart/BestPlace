@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<h1>@ViewData["Title"]</h1>

<section class="clean-block clean-form dark">
    <div class="container">
        <div class="block-heading">
            <h2 class="text-info">Use a local account to log in.</h2>
        </div>
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="mb-3">
                <label asp-for="Input.Email" class="form-label">Email</label>
                <input autocomplete="email" asp-for="Input.Email" class="form-control item" type="email">
            </div>

            <div class="mb-3">
                <label asp-for="Input.Password" class="form-label">Password</label>
                <input autocomplete="password" asp-for="Input.Password" class="form-control item" type="password">
            </div>
            
            <div class="mb-3">
                <label asp-for="Input.RememberMe" class="form-label"> @Html.DisplayNameFor(m => m.Input.RememberMe)</label>
                <input  asp-for="Input.RememberMe" class="form-control item" >
            </div>
            
            <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
            
            <div>
                <p>
                    <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                </p>
                <p>
                    <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                </p>
                <p>
                    <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                </p>
            </div>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                                about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </form>
    </div>
    
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
